#!/usr/bin/env zsh

max_image_length=30

docker container ps --format "json" | (
jq \
    --raw-output \
    --null-input \
    --arg _max_len "${max_image_length}" \
    --from-file /dev/fd/3 \
    3<<"EOF"
# begin(EOF)
  ($_max_len | tonumber) as $MAX_LEN
  | [inputs 
    | to_entries
    | map(
        if (.key == "Image") then .+{
          value:
            (if (.value | length > $MAX_LEN)
              then "..." + .value[-$MAX_LEN:]
              else .value
            end)
        } else null end //
        if (.key == "Ports") then .+{
          # This ignores IPv4 vs IPv6-ness and TCP vs UDP.
          # It should be fine for an overview.
          value: .value
            | split(", ")
            | map(.
              | capture("(?<ip>.+):(?<host>[0-9]+)->(?<container>[0-9]+)")
              | .host + ":" + .container
            )
            | unique
            | join(",")
        } else null end //
        .
     )
    | from_entries
  ]
  | sort_by(.CreatedAt, .ID)
  | if (. | length == 0) then ["-"] else . end
  | [
      { # Pretty-printed column name mapping :-)
        Command:      "COMMAND",
        CreatedAt:    "CREATED AT",
        ID:           "ID",
        Image:        "IMAGE",
        Labels:       "LABELS",
        LocalVolumes: "LOCAL VOLUMES",
        Mounts:       "MOUNTS",
        Names:        "NAMES",
        Networks:     "NETWORKS",
        Ports:        "PORTS",
        RunningFor:   "RUNNING FOR",
        Size:         "SIZE",
        State:        "STATE",
        Status:       "STATUS",
      },
      .[]
  ]
  | .[]
  | if (. | type == "string") then [.] else null end //
    [.ID, .Names, .Status, .Image]
  | @tsv
# end(EOF)
EOF
) | column -t -s $'\t'

