#!/usr/bin/env zsh

max_image_length=30

pipe_name="$(mktemp --dry-run)"
mkfifo "${pipe_name}"
exec {throwaway}<>${pipe_name}
exec {fdout}>${pipe_name}
exec {fdin}<${pipe_name}
exec {throwaway}>&-

docker container ps --format "json" |
  jq \
    --raw-output \
    --null-input \
    --arg _max_len "${max_image_length}" \
    --from-file /dev/fd/3 \
    3<<"EOF" \
    >&${fdout}
# begin(EOF)
  ($_max_len | tonumber) as $MAX_LEN
  | [inputs 
    | to_entries
    | map(
        if (.key == "Image") then .+{
          value:
            (if (.value | length > $MAX_LEN)
              then "..." + .value[-$MAX_LEN:]
              else .value
            end)
        } else null end //
        .
     )
    | from_entries
  ]
  | sort_by(.ID)
  | sort_by(.CreatedAt)
  | [
      { # Pretty-printed column name mapping :-)
        ID:        "ID",
        Names:     "NAMES",
        Status:    "STATUS",
        Image:     "IMAGE",
        Ports:     "PORTS",
        CreatedAt: "CREATED AT",
      },
      .[]
  ]
  | .[]
  | [.ID, .Names, .Status, .Image]
  | @tsv
# end(EOF)
EOF
exec {fdout}>&-

cat <&$fdin | column -t -s $'\t'
exec {fdin}>&-

rm "${pipe_name}"
